1.多态：
不能再静态方法中访问非静态变量和非静态方法，比如main方法中訪問非static變量和方法
abstract 類可以包含非抽象方法的；
interface
所有的field都需要是public static final
必須為abstract方法


Strategy Pattern
1.建立一个interface;
2.实现该interface，得到若干个类
3.在一个class中新建一个类作为其fields

public Flys flyingType

4.后续建立方法利用此类，实现功能

在父类写入这个方法，fields中写入这个类，利用对象
若干个类都有这样一个行为：

name可以写一个这个行为的接口，利用不同的方式实现这个接口，来实现不同的功能。
于是在父类中就可以新建一个这个类的field，通过改变类的field来实现功能。

Observer Pattern
简历两个interface

1.subject:
register注册一个新的Observer
unregister取消一个observer
notifyObsever发生修改时通知observer更新

2.observer
update，收到更新通知之后进行一系列的操作


Fatory Pattern

多个类继承自统一父类，要想根据外界信息动态的生成所想要的类的对象，就需要使用factory Pattern

1.建立abstract class
2.多个子类继承这个抽象父类
3.建立工程方法，根据外界信息生成子类对象


Abstract factory Pattern
